version: "3"
services:

  #  hub service for the selenium configurations
  hub:
    image: selenium/hub:3.141.59-zirconium
    ports:
      - "4444:4444"
  # Spawn chrome browser for selenium configurations
  chrome:
    image: selenium/node-chrome:3.141.59-zirconium
    volumes:
      - /dev/shm:/dev/shm
    environment:
      HUB_HOST: hub
      HUB_PORT: 4444
    deploy:
        replicas: 1
    entrypoint: bash -c 'SE_OPTS="-host $$HOSTNAME" /opt/bin/entry_point.sh'

  # python and airflow container configurations #2
  itira-python:
    container_name: itira-python
    build: .
    stdin_open: true
    privileged: true
    tty: true
    restart: always
    entrypoint: airflow webserver -p 8080
    ports:
      - "7050:8080"
    depends_on:
      - itira-postgres
      - itira-initdb
      - itira-mariaDB
      - itira-phpMyAdmin
      - hub
      - chrome
    environment:
      - AIRFLOW_HOME=/ITIRA/airflow
      - HUB_HOST=hub
      - HUB_PORT=4444
    volumes:
      - ./airflow/:/ITIRA/airflow
      - .files/airflow.cfg:/ITIRA/airflow/airflow.cfg
      - ./dags:/ITIRA/dags
      - .:/ITIRA
      - ./chrome_driver/:/ITIRA/chrome_driver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /ITIRA/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  #  airflow initdb service configuration #1
  itira-initdb:
    container_name: itira-initdb
    build: .
    entrypoint: airflow initdb
    depends_on:
      - itira-postgres
      - itira-mariaDB
      - itira-phpMyAdmin
    environment:
      - AIRFLOW_HOME=/ITIRA/airflow
    volumes:
      - ./airflow/:/ITIRA/airflow
      - .files/airflow.cfg:/ITIRA/airflow/airflow.cfg

  #  airflow scheduler service configuration #3
  itira-scheduler:
    build: .
    container_name: itira-scheduler
    depends_on:
      - itira-mariaDB
      - itira-initdb
      - itira-python
      - itira-phpMyAdmin
    volumes:
      - ./airflow/:/ITIRA/airflow
      - .files/airflow.cfg:/ITIRA/airflow/airflow.cfg
      - ./dags:/ITIRA/dags
      - ./dags:/ITIRA/airflow/dags
      - .:/ITIRA
      - ./postgres_data/:/var/lib/postgresql/data:rw
    environment:
      - AIRFLOW_HOME=/ITIRA/airflow
    entrypoint: airflow scheduler
    stdin_open: true
    privileged: true
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "[ -f /ITIRA/airflow/airflow-scheduler.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  itira-postgres:
    container_name: itira-postgres
    image: postgres:10.1-alpine
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data:rw
    ports:
      - 5437:5432
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  itira-phpMyAdminAws:
    image: phpmyadmin/phpmyadmin
    container_name: itira-phpMyAdminAws
    environment:
      PMA_HOSTS: g1g-staging-rds-mariadb.cqspand7euco.us-west-2.rds.amazonaws.com,g1g-prod-rds-mariadb.cqspand7euco.us-west-2.rds.amazonaws.com
    #      PMA_USER: g1gdbadmin
    #      PMA_PASSWORD:
    ports:
      - 8010:80

  # itira-phpMyAdmin for local db container configuration
  itira-phpMyAdmin:
    image: phpmyadmin/phpmyadmin
    container_name: itira-phpMyAdmin
    environment:
      # PMA_ARBIRARY: 1
      PMA_HOSTS: ${PMA_HOSTS}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - ${PMA_LOCAL_PORT}:${PMA_DOCK_PORT}
    depends_on:
      - itira-mariaDB

  # Maria db container configuration
  itira-mariaDB:
    container_name: itira-mariaDB
    image: mariadb:10.3.8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./database/:/docker-entrypoint-initdb.d
    command: mysqld --max_allowed_packet=512M --sql_mode="NO_ENGINE_SUBSTITUTION"
    ports:
      - ${MYSQL_LOCAL_PORT}:${MYSQL_DOCK_PORT}

  #service for cache
  itira-redis:
    container_name: itira-redis
    restart: always
    image: redis:latest
    ports:
      - "6377:6379"
    volumes:
      - redisdata:/data
volumes:
  # database-data:
  redisdata:
  # - airflow:
  # - dags: